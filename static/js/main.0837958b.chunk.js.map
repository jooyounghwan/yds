{"version":3,"sources":["assets/noPosterSmall.png","assets/NoVideo.png","assets/Loading.gif","assets/IMDb.svg","Components/Header.js","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Routes/Detail/Tabs/VideoTab.js","Routes/Detail/Tabs/ProductionTab.js","Routes/Detail/Tabs/CreatedByTab.js","Routes/Detail/Tabs/MoreTab.js","Routes/Detail/Tabs.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Routes/Collection/CollectionPresenter.js","Routes/Collection/index.js","Routes/Collection/CollectionContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","Header","styled","header","List","ul","Item","li","props","current","SLink","Link","withRouter","pathname","location","to","Container","div","Title","span","Grid","Section","title","children","role","aria-label","Text","color","Message","text","Image","bgUrl","Rating","ImageContainer","ImageContainerOnly","Year","PerformanceEntry","propTypes","id","PropTypes","number","isRequired","imageUrl","string","rating","year","isMovie","bool","Poster","isCollection","onlyImage","require","length","substring","HomePresenter","nowPlaying","popular","upcoming","loading","error","Loader","map","movie","key","poster_path","vote_average","release_date","api","axios","create","baseURL","interceptors","request","use","config","params","moviesApi","get","append_to_response","term","query","language","tvApi","collectionApi","HomeContainer","state","data","results","this","setState","React","Component","TVPresenter","topRated","airingToday","show","name","first_air_date","TVContainer","Form","form","Input","input","SearchPresenter","movieResults","tvResults","searchTerm","handleSubmit","updateTerm","onSubmit","placeholder","value","onChange","SearchContainer","event","preventDefault","searchByTerm","target","a","NoVideo","VideoContainer","Viewer","num","WrapWrap","Wrap","Video","iframe","VideoButtons","VideoButton","VideoTab","videos","result","video","index","src","href","LogoWrapper","CompanyLogo","Country","ProductionsTab","production_companies","production_countries","company","logo_path","country","ProfileWrapper","Profile","MadeByTab","created_by","people","profile_path","Content","Homepage","attrs","SeasonsContainer","Season","MoreTab","homepage","status","budget","toLocaleString","spoken_languages","seasons","season","air_date","MenuContainer","MenuTab","NavLink","Menu","MenuContents","MenuContent","Tabs","search","ProductionTab","CreatedByTab","BackDrop","bgImage","Cover","Data","h3","ItemContainer","Divider","Overview","IMDb","Stars","Collection","DetailPresenter","backdrop_path","runtime","episode_run_time","genres","genre","imdb_id","fill","Math","round","join","overview","belongs_to_collection","DetailContainer","includes","match","push","history","parsedId","parseInt","isNaN","CollectionPresenter","parts","CollectionContainer","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","reset","App","Router","GlobalStyles","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.0837958b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.d0ac7ce5.png\";","module.exports = __webpack_public_path__ + \"static/media/NoVideo.13526e1e.png\";","module.exports = __webpack_public_path__ + \"static/media/Loading.6bc11c2e.gif\";","module.exports = __webpack_public_path__ + \"static/media/IMDb.63115ec2.svg\";","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Header = styled.header`\n    color: white;\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    background-color: rgba(20, 20, 20, 0.8);\n    box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\n`;\n\nconst List = styled.ul`\n    display: flex;\n`;\n\nconst Item = styled.li`\n    width: 80px;\n    height: 50px;\n    text-align: center;\n    border-bottom: 3px solid ${(props) => (props.current ? '#3498db' : 'transparent')};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst SLink = styled(Link)`\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n`;\n\nexport default withRouter(({ location: { pathname } }) => (\n    <Header>\n        <List>\n            <Item current={pathname === '/'}>\n                <SLink to=\"/\">Movies</SLink>\n            </Item>\n            <Item current={pathname === '/tv'}>\n                <SLink to=\"/tv\">TV</SLink>\n            </Item>\n            <Item current={pathname === '/search'}>\n                <SLink to=\"/search\">Search</SLink>\n            </Item>\n        </List>\n    </Header>\n));\n","import React from 'react';\nimport Proptypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    :not(:last-child) {\n        margin-bottom: 50px;\n    }\n`;\n\nconst Title = styled.span`\n    font-size: 14px;\n    font-weight: 600;\n`;\n\nconst Grid = styled.div`\n    margin-top: 25px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 125px);\n    grid-gap: 25px;\n`;\n\nconst Section = ({ title, children }) => (\n    <Container>\n        <Title>{title}</Title>\n        <Grid>{children}</Grid>\n    </Container>\n);\n\nSection.propTypes = {\n    title: Proptypes.string.isRequired,\n    children: Proptypes.oneOfType([Proptypes.arrayOf(Proptypes.node), Proptypes.node]),\n};\n\nexport default Section;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 100vh;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n    font-size: 28px;\n    margin-top: 20px;\n`;\n\nexport default () => (\n    <Container>\n        <span role=\"img\" aria-label=\"Loading\">\n            ⏱\n        </span>\n    </Container>\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    margin-top: 20px;\n    width: 100vw;\n    display: flex;\n    justify-content: center;\n`;\n\nconst Text = styled.span`\n    color: ${(props) => props.color};\n`;\n\nconst Message = ({ text, color }) => (\n    <Container>\n        <Text color={color}>{text}</Text>\n    </Container>\n);\n\nMessage.propTypes = {\n    text: PropTypes.string.isRequired,\n    color: PropTypes.string.isRequired,\n};\n\nexport default Message;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\n\nconst Container = styled.div`\n    font-size: 12px;\n`;\n\nconst Image = styled.div`\n    background-image: url(${(props) => props.bgUrl});\n    width: 125px;\n    height: 180px;\n    background-size: cover;\n    border-radius: 4px;\n    background-position: center center;\n    transition: opacity 0.1s linear;\n`;\n\nconst Rating = styled.span`\n    bottom: 5px;\n    right: 5px;\n    position: absolute;\n    opacity: 0;\n    transition: opacity 0.1s linear;\n`;\n\nconst ImageContainer = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n    &:hover {\n        ${Image} {\n            opacity: 0.3;\n        }\n        ${Rating} {\n            opacity: 1;\n        }\n    }\n`;\n\nconst ImageContainerOnly = styled.div`\n    margin-bottom: 5px;\n    position: relative;\n`;\n\nconst Title = styled.span`\n    display: block;\n    margin-bottom: 3px;\n`;\n\nconst Year = styled.span`\n    font-size: 10px;\n    color: rgba(255, 255, 255, 0.5);\n`;\n\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false, isCollection = false, onlyImage = false }) =>\n    onlyImage ? (\n        <Container>\n            <ImageContainerOnly>\n                <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require('../assets/noPosterSmall.png')} />\n            </ImageContainerOnly>\n            <Title>{title.length > 18 ? `${title.substring(0, 15)}...` : title}</Title>\n            <Year>{year && year.substring(0, 4)}</Year>\n        </Container>\n    ) : (\n        <Link to={isCollection ? `/collection/${id}` : isMovie ? `/movie/${id}` : `/show/${id}`}>\n            <Container>\n                <ImageContainer>\n                    <Image bgUrl={imageUrl ? `https://image.tmdb.org/t/p/w300${imageUrl}` : require('../assets/noPosterSmall.png')} />\n                    {!isCollection && (\n                        <Rating>\n                            <span role=\"img\" aria-label=\"rating\">\n                                ⭐\n                            </span>{' '}\n                            {rating}/10\n                        </Rating>\n                    )}\n                </ImageContainer>\n                <Title>{title.length > 18 ? `${title.substring(0, 15)}...` : title}</Title>\n                <Year>{year && year.substring(0, 4)}</Year>\n            </Container>\n        </Link>\n    );\n\nPerformanceEntry.propTypes = {\n    id: PropTypes.number.isRequired,\n    imageUrl: PropTypes.string,\n    title: PropTypes.string.isRequired,\n    rating: PropTypes.number,\n    year: PropTypes.string,\n    isMovie: PropTypes.bool,\n};\n\nexport default Poster;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\n    <>\n        <Helmet>\n            <title>Movies | 영드사</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n            <Container>\n                <Helmet>\n                    <title>Movies | 영드사</title>\n                </Helmet>\n                {nowPlaying && nowPlaying.length > 0 && (\n                    <Section title=\"현재 상영 영화\">\n                        {nowPlaying.map((movie) => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.title}\n                                rating={movie.vote_average}\n                                year={movie.release_date}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {upcoming && upcoming.length > 0 && (\n                    <Section title=\"개봉예정 영화\">\n                        {upcoming.map((movie) => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.title}\n                                rating={movie.vote_average}\n                                year={movie.release_date}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"인기 영화\">\n                        {popular.map((movie) => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.title}\n                                rating={movie.vote_average}\n                                year={movie.release_date}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error}></Message>}\n            </Container>\n        )}\n    </>\n);\n\nHomePresenter.propTypes = {\n    nowPlaying: PropTypes.array,\n    popular: PropTypes.array,\n    upcoming: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n};\n\nexport default HomePresenter;\n","import axios from 'axios';\n\nconst api = axios.create({\n    baseURL: 'https://api.themoviedb.org/3/',\n});\n\napi.interceptors.request.use((config) => {\n    config.params = config.params || {};\n    config.params['api_key'] = '2297bd2c19bb4c0e91655f0fbd5d46c7';\n    config.params['language'] = 'ko-KR';\n    return config;\n});\n\nexport const moviesApi = {\n    nowPlaying: () => api.get('movie/now_playing'),\n    upcoming: () => api.get('movie/upcoming'),\n    popular: () => api.get('movie/popular'),\n    movieDetail: (id) =>\n        api.get(`movie/${id}`, {\n            params: {\n                append_to_response: 'videos',\n            },\n        }),\n    search: (term) =>\n        api.get('search/movie', {\n            params: {\n                query: term,\n                language: 'ko-KR',\n            },\n        }),\n        \n};\n\nexport const tvApi = {\n    topRated: () => api.get('tv/top_rated'),\n    popular: () => api.get('tv/popular'),\n    airingToday: () => api.get('tv/airing_today'),\n    showDetail: (id) =>\n        api.get(`tv/${id}`, {\n            params: {\n                append_to_response: 'videos',\n            },\n        }),\n    search: (term) =>\n        api.get('search/tv', {\n            params: {\n                query: term,\n        language: 'ko-KR',\n            },\n        }),\n};\n\nexport const collectionApi = {\n    showDetail: (id) => api.get(`collection/${id}`),\n};\n","import HomeContainer from './HomeContainer';\n\nexport default HomeContainer;\n","import React from 'react';\nimport HomePresenter from './HomePresenter.js';\nimport { moviesApi } from 'api';\n\nexport default class extends React.Component {\n    state = {\n        nowPlaying: null,\n        upcoming: null,\n        popular: null,\n        error: null,\n        loading: true,\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: nowPlaying },\n            } = await moviesApi.nowPlaying();\n            const {\n                data: { results: upcoming },\n            } = await moviesApi.upcoming();\n            const {\n                data: { results: popular },\n            } = await moviesApi.popular();\n            this.setState({\n                nowPlaying,\n                upcoming,\n                popular,\n            });\n        } catch {\n            this.setState({\n                error: \"영화 정보를 찾을수 없습니다.\",\n            });\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    }\n\n    render() {\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\n        return <HomePresenter nowPlaying={nowPlaying} upcoming={upcoming} popular={popular} error={error} loading={loading} />;\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from 'Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst TVPresenter = ({ topRated, popular, airingToday, loading, error }) => (\n    <>\n        <Helmet>\n            <title>TV Shows | 영드사</title>\n        </Helmet>\n        {loading ? (\n            <Loader />\n        ) : (\n            <Container>\n                {airingToday && airingToday.length > 0 && (\n                    <Section title=\"TV 방영중\">\n                        {airingToday.map((show) => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.name}\n                                rating={show.vote_average}\n                                year={show.first_air_date}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {topRated && topRated.length > 0 && (\n                    <Section title=\"높은평점 영화\">\n                        {topRated.map((show) => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.name}\n                                rating={show.vote_average}\n                                year={show.first_air_date}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {popular && popular.length > 0 && (\n                    <Section title=\"인기 TV 프로그램\">\n                        {popular.map((show) => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.name}\n                                rating={show.vote_average}\n                                year={show.first_air_date}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {error && <Message color=\"#e74c3c\" text={error}></Message>}\n            </Container>\n        )}\n    </>\n);\n\nTVPresenter.propTypes = {\n    topRated: PropTypes.array,\n    popular: PropTypes.array,\n    airingToday: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n};\n\nexport default TVPresenter;\n","import TVContainer from './TVContainer';\n\nexport default TVContainer;\n","import React from 'react';\nimport TVPresenter from './TVPresenter';\nimport { tvApi } from 'api';\n\nexport default class extends React.Component {\n    state = {\n        topRated: null,\n        popular: null,\n        airingToday: null,\n        error: null,\n        loading: true,\n    };\n\n    async componentDidMount() {\n        try {\n            const {\n                data: { results: topRated },\n            } = await tvApi.topRated();\n            const {\n                data: { results: popular },\n            } = await tvApi.popular();\n            const {\n                data: { results: airingToday },\n            } = await tvApi.airingToday();\n            this.setState({ topRated, popular, airingToday });\n        } catch {\n            this.setState({\n                error: \"TV 프로그램 정보를 찾을수가 없습니다\",\n            });\n        } finally {\n            this.setState({\n                loading: false,\n            });\n        }\n    }\n\n    render() {\n        const { topRated, popular, airingToday, error, loading } = this.state;\n        return <TVPresenter topRated={topRated} popular={popular} airingToday={airingToday} error={error} loading={loading} />;\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Section from 'Components/Section';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n    padding: 20px;\n`;\n\nconst Form = styled.form`\n    margin-bottom: 50px;\n    width: 100%;\n`;\n\nconst Input = styled.input`\n    all: unset;\n    font-size: 28px;\n    width: 100%;\n`;\n\nconst SearchPresenter = ({ movieResults, tvResults, loading, searchTerm, handleSubmit, error, updateTerm }) => (\n    <Container>\n        <Helmet>\n            <title>Search | 영드사</title>\n        </Helmet>\n        <Form onSubmit={handleSubmit}>\n            <Input placeholder=\"영화 또는 TV 프로그램 검색하세요\" value={searchTerm} onChange={updateTerm} />\n        </Form>\n        {loading ? (\n            <Loader />\n        ) : (\n            <>\n                {movieResults && movieResults.length > 0 && (\n                    <Section title=\"영화 검색 결과\">\n                        {movieResults.map((movie) => (\n                            <Poster\n                                key={movie.id}\n                                id={movie.id}\n                                imageUrl={movie.poster_path}\n                                title={movie.title}\n                                rating={movie.vote_average}\n                                year={movie.release_date}\n                                isMovie={true}\n                            />\n                        ))}\n                    </Section>\n                )}\n                {tvResults && tvResults.length > 0 && (\n                    <Section title=\"TV 검색결과\">\n                        {tvResults.map((show) => (\n                            <Poster\n                                key={show.id}\n                                id={show.id}\n                                imageUrl={show.poster_path}\n                                title={show.name}\n                                rating={show.vote_average}\n                                year={show.first_air_date}\n                            />\n                        ))}\n                    </Section>\n                )}\n            </>\n        )}\n        {error && <Message color=\"#e74c3c\" text={error} />}\n        {tvResults && movieResults && tvResults.length === 0 && movieResults.length === 0 && (\n            <Message color=\"#95a5a6\" text=\"Nothing found\" />\n        )}\n    </Container>\n);\n\nSearchPresenter.propTypes = {\n    movieResults: PropTypes.array,\n    tvResults: PropTypes.array,\n    loading: PropTypes.bool.isRequired,\n    searchTerm: PropTypes.string,\n    error: PropTypes.string,\n    handleSubmit: PropTypes.func.isRequired,\n    updateTerm: PropTypes.func.isRequired,\n};\n\nexport default SearchPresenter;\n","import SearchContainer from './SearchContainer';\n\nexport default SearchContainer;\n","import React from 'react';\nimport SearchPresenter from './SearchPresenter';\nimport { moviesApi } from 'api';\nimport { tvApi } from '../../api';\n\nexport default class extends React.Component {\n    state = {\n        movieResults: null,\n        tvResults: null,\n        searchTerm: '',\n        error: null,\n        loading: false,\n    };\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        const { searchTerm } = this.state;\n        if (searchTerm !== '') {\n            this.searchByTerm(searchTerm);\n        }\n    };\n\n    updateTerm = (event) => {\n        const {\n            target: { value },\n        } = event;\n        this.setState({\n            searchTerm: value,\n        });\n    };\n\n    searchByTerm = async () => {\n        const { searchTerm } = this.state;\n        this.setState({ loading: true });\n        try {\n            const {\n                data: { results: movieResults },\n            } = await moviesApi.search(searchTerm);\n            const {\n                data: { results: tvResults },\n            } = await tvApi.search(searchTerm);\n            this.setState({\n                movieResults,\n                tvResults,\n            });\n        } catch {\n            this.setState({ error: \"결과를 찾을 수 없습니다.\" });\n        } finally {\n            this.setState({ loading: false });\n        }\n    };\n\n    render() {\n        const { movieResults, tvResults, searchTerm, error, loading } = this.state;\n        return (\n            <SearchPresenter\n                movieResults={movieResults}\n                tvResults={tvResults}\n                searchTerm={searchTerm}\n                error={error}\n                loading={loading}\n                handleSubmit={this.handleSubmit}\n                updateTerm={this.updateTerm}\n            />\n        );\n    }\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Item = styled.div`\n    margin-top: 10px;\n    width: 100%;\n    height: auto;\n`;\n\nconst NoVideo = styled.div`\n    width: 100%;\n    height: 0;\n    background-image: url(${require('../../../assets/NoVideo.png')});\n    background-size: cover;\n    background-position: center center;\n    padding: 10px 10px 56.25% 10px;\n`;\n\nconst VideoContainer = styled.div`\n    width: 100%;\n    height: auto;\n    overflow-x: hidden;\n    background-image: url(${require('../../../assets/Loading.gif')});\n    background-size: cover;\n    background-position: center center;\n`;\n\nconst Viewer = styled.div`\n    width: calc(100% * ${(props) => props.num});\n    height: auto;\n    display: flex;\n`;\n\nconst WrapWrap = styled.div`\n    width: 100%;\n    height: auto;\n    position: relative;\n`;\n\nconst Wrap = styled.div`\n    width: 100%;\n    height: 0;\n    padding-bottom: 56.25%;\n    position: relative;\n`;\n\nconst Video = styled.iframe`\n    position: absolute;\n    width: 100%;\n    height: 100%;\n`;\n\nconst VideoButtons = styled.div`\n    height: auto;\n    width: 100%;\n    margin-top: 5px;\n    text-align: center;\n`;\n\nconst VideoButton = styled.a`\n    display: inline-block;\n    background-color: rgba(20, 20, 20, 0.8);\n    width: 20px;\n    height: 20px;\n    margin: 5px;\n    border-radius: 50%;\n    border: 1px solid rgb(100, 100, 100);\n    :hover {\n        background-color: rgb(100, 100, 100);\n    }\n`;\n\nconst VideoTab = ({\n    result: {\n        videos: { results: videos },\n    },\n}) => (\n    <Item>\n        {videos.length === 0 ? (\n            <NoVideo>No videos find</NoVideo>\n        ) : (\n            <>\n                <VideoContainer>\n                    <Viewer num={`${videos.length}`}>\n                        {videos.map((video, index) => (\n                            <WrapWrap id={`${index}`}>\n                                <Wrap>\n                                    <Video src={`https://www.youtube.com/embed/${video.key}`} />\n                                </Wrap>\n                            </WrapWrap>\n                        ))}\n                    </Viewer>\n                </VideoContainer>\n                <VideoButtons>\n                    {videos.map((video, index) => (\n                        <VideoButton href={`#${index}`} />\n                    ))}\n                </VideoButtons>\n            </>\n        )}\n    </Item>\n);\nexport default VideoTab;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Item = styled.div`\n    margin-top: 10px;\n    width: 100%;\n    height: auto;\n    padding: 10px;\n    background-color: rgba(25, 25, 25, 0.6);\n`;\n\nconst Grid = styled.div`\n    margin-top: 5px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 140px);\n    grid-gap: 15px;\n`;\n\nconst LogoWrapper = styled.div`\n    flex: 1;\n    height: auto;\n    background-color: rgba(24, 24, 28, 0.85);\n    border-radius: 4px;\n    padding: 5px;\n    color: rgba(255, 255, 255, 0.6);\n    text-align: center;\n`;\n\nconst CompanyLogo = styled.div`\n    background-image: url(${(props) => props.bgUrl});\n    width: 100%;\n    height: 100px;\n    margin-bottom: 10px;\n    background-size: contain;\n    background-repeat: no-repeat;\n    background-position: center center;\n`;\n\nconst Country = styled.div`\n    width: 100%;\n    height: auto;\n    margin-top: 5px;\n    background-color: rgba(24, 24, 28, 0.85);\n    padding: 10px;\n    color: rgba(255, 255, 255, 0.6);\n    border-radius: 4px;\n`;\n\nconst ProductionsTab = ({ result: { production_companies, production_countries } }) => (\n    <>\n        <Item>\n            Production Companies\n            <Grid>\n                {production_companies && production_companies.length > 0\n                    ? production_companies.map((company, index) => (\n                          <LogoWrapper>\n                              <CompanyLogo\n                                  bgUrl={\n                                      company.logo_path\n                                          ? `https://image.tmdb.org/t/p/w300${company.logo_path}`\n                                          : require('../../../assets/noPosterSmall.png')\n                                  }\n                              />\n                              <h1>{company.name}</h1>\n                          </LogoWrapper>\n                      ))\n                    : 'None'}\n            </Grid>\n        </Item>\n        <Item>\n            Production Countries\n            {production_countries && production_countries.length > 0 ? (\n                production_countries.map((country, index) => <Country>{country.name}</Country>)\n            ) : (\n                <Country>None</Country>\n            )}\n        </Item>\n    </>\n);\n\nexport default ProductionsTab;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst Item = styled.div`\n    margin-top: 10px;\n    width: 100%;\n    height: auto;\n    padding: 10px;\n    background-color: rgba(25, 25, 25, 0.6);\n`;\n\nconst Grid = styled.div`\n    margin-top: 5px;\n    display: grid;\n    grid-template-columns: repeat(auto-fill, 140px);\n    grid-gap: 15px;\n`;\n\nconst ProfileWrapper = styled.div`\n    flex: 1;\n    height: auto;\n    padding: 5px;\n    color: rgba(255, 255, 255, 0.6);\n    text-align: center;\n`;\n\nconst Profile = styled.div`\n    background-color: rgba(24, 24, 28, 0.85);\n    background-image: url(${(props) => props.bgUrl});\n    border-radius: 4px;\n    width: 100%;\n    height: 180px;\n    margin-bottom: 10px;\n    background-size: cover;\n    background-repeat: no-repeat;\n    background-position: center center;\n`;\n\nconst MadeByTab = ({ result: { created_by } }) => (\n    <Item>\n        Peoples\n        <Grid>\n            {created_by && created_by.length > 0\n                ? created_by.map((people, index) => (\n                      <ProfileWrapper>\n                          <Profile\n                              bgUrl={\n                                  people.profile_path\n                                      ? `https://image.tmdb.org/t/p/w300${people.profile_path}`\n                                      : require('../../../assets/noPosterSmall.png')\n                              }\n                          />\n                          <h1>{people.name}</h1>\n                      </ProfileWrapper>\n                  ))\n                : 'None'}\n        </Grid>\n    </Item>\n);\n\nexport default MadeByTab;\n","import React from 'react';\nimport styled from 'styled-components';\nimport Poster from '../../../Components/Poster';\n\nconst Container = styled.div``;\n\nconst Content = styled.div`\n    margin-top: 10px;\n    width: 100%;\n    height: auto;\n    padding: 10px;\n    background-color: rgba(25, 25, 25, 0.6);\n`;\n\nconst Item = styled.div`\n    width: 100%;\n    height: auto;\n    margin-top: 5px;\n    background-color: rgba(24, 24, 28, 0.85);\n    padding: 10px;\n    color: rgba(255, 255, 255, 0.6);\n    border-radius: 4px;\n`;\n\nconst Homepage = styled.a.attrs((props) => ({\n    href: props.children,\n    target: '_blank',\n}))`\n    text-decoration: underline;\n    display: inline-block;\n`;\n\nconst SeasonsContainer = styled.div`\n    width: 100%;\n    height: 245px;\n    padding-top: 10px;\n    /* background-color: red; */\n    display: flex;\n    overflow-x: auto;\n    overflow-y: visible;\n`;\n\nconst Season = styled.div`\n    height: auto;\n    width: 125px;\n    margin-right: 10px;\n`;\n\nconst MoreTab = ({ result }) => (\n    <Container>\n        {result.homepage && (\n            <Content>\n                Homepage\n                <Item>\n                    <Homepage>{result.homepage}</Homepage>\n                </Item>\n            </Content>\n        )}\n        {result.status === 'Released' && (\n            <Container>\n                <Content>\n                    Release Date\n                    <Item>{result.release_date ? result.release_date : result.status}</Item>\n                </Content>\n                <Content>\n                    Budget\n                    <Item>{result.budget ? `${result.budget.toLocaleString()} $` : 'None'}</Item>\n                </Content>\n            </Container>\n        )}\n        {result.status === 'In Production' && (\n            <Content>\n                Status<Item>In Production</Item>\n            </Content>\n        )}\n        {result.spoken_languages && result.spoken_languages.length > 0 && (\n            <Content>\n                Spoken Languages\n                {result.spoken_languages.map(({ name }) => name !== '' && <Item>{name}</Item>)}\n            </Content>\n        )}\n        {result.seasons && (\n            <Content>\n                Seasons\n                <SeasonsContainer>\n                    {result.seasons.map((season) => (\n                        <Season>\n                            <Poster\n                                key={season.id}\n                                id={season.id}\n                                imageUrl={season.poster_path}\n                                title={season.name}\n                                year={season.air_date}\n                                onlyImage={true}\n                            />\n                        </Season>\n                    ))}\n                </SeasonsContainer>\n            </Content>\n        )}\n    </Container>\n);\n\nexport default MoreTab;\n","import React from 'react';\nimport { NavLink, withRouter } from 'react-router-dom';\nimport styled from 'styled-components';\nimport VideoTab from './Tabs/VideoTab';\nimport ProductionTab from './Tabs/ProductionTab';\nimport CreatedByTab from './Tabs/CreatedByTab';\nimport MoreTab from './Tabs/MoreTab';\n\nconst MenuContainer = styled.div`\n    width: 50%;\n    height: auto;\n`;\n\nconst MenuTab = styled(NavLink)`\n    display: flex;\n    flex: 1;\n    height: 100%;\n    text-align: center;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    border-bottom: 3px solid ${(props) => (props.current ? '#bdc3c7' : 'transparent')};\n    transition: border-bottom 0.5s ease-in-out;\n`;\n\nconst Menu = styled.div`\n    height: 45px;\n    width: 100%;\n    display: flex;\n    background-color: rgba(25, 25, 25, 0.6);\n`;\n\nconst MenuContents = styled.div`\n    width: 100%;\n    height: auto;\n`;\n\nconst MenuContent = styled.div`\n    width: 100%;\n    height: auto;\n`;\n\nconst Tabs = withRouter(({ location, result }) => (\n    <MenuContainer>\n        <Menu>\n            <MenuTab to={`${location.pathname}?tab=video`} current={location.search === '?tab=video' || location.search === ''}>\n                Video\n            </MenuTab>\n            <MenuTab to={`${location.pathname}?tab=production`} current={location.search === '?tab=production'}>\n                Production\n            </MenuTab>\n            {result.created_by && result.created_by.length > 0 && (\n                <MenuTab to={`${location.pathname}?tab=created_by`} current={location.search === '?tab=created_by'}>\n                    Created By\n                </MenuTab>\n            )}\n            <MenuTab to={`${location.pathname}?tab=more`} current={location.search === '?tab=more'}>\n                More\n            </MenuTab>\n        </Menu>\n        <MenuContents>\n            {(location.search === '?tab=video' || location.search === '') && (\n                <MenuContent>\n                    <VideoTab result={result} />\n                </MenuContent>\n            )}\n            {location.search === '?tab=production' && (\n                <MenuContent>\n                    <ProductionTab result={result} />\n                </MenuContent>\n            )}\n            {location.search === '?tab=created_by' && (\n                <MenuContent>\n                    <CreatedByTab result={result} />\n                </MenuContent>\n            )}\n            {location.search === '?tab=more' && (\n                <MenuContent>\n                    <MoreTab result={result} />\n                </MenuContent>\n            )}\n        </MenuContents>\n    </MenuContainer>\n));\n\nexport default Tabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Loader from 'Components/Loader';\nimport Message from '../../Components/Message';\nimport Tabs from './Tabs';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n    overflow: hidden;\n`;\n\nconst BackDrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${(props) => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    height: 100%;\n    background-image: url(${(props) => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 69%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n\nconst ItemContainer = styled.div`\n    margin-top: 20px;\n    height: 16px;\n`;\n\nconst Item = styled.span``;\n\nconst Divider = styled.span`\n    margin: 0 10px;\n`;\n\nconst Overview = styled.div`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n    margin: 20px 0;\n`;\n\nconst IMDb = styled.a`\n    height: 16px;\n    width: 32px;\n    display: inline-block;\n    top: 50px;\n    position: absolute;\n    background-image: url(${require('../../assets/IMDb.svg')});\n`;\n\nconst Stars = styled.span`\n    color: #f1c40f;\n`;\n\nconst Collection = styled(Link)`\n    width: 125px;\n    height: 180px;\n`;\n\nconst DetailPresenter = ({ result, loading, error }) =>\n    loading ? (\n        <>\n            <Helmet>\n                <title>Loading | 영드사</title>\n            </Helmet>\n            <Loader />\n        </>\n    ) : (\n        <>\n            {result && (\n                <Container>\n                    <Helmet>\n                        <title>{result.title ? result.title : result.name} | 영드사</title>\n                    </Helmet>\n                    <BackDrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n                    <Content>\n                        <Cover\n                            bgImage={\n                                result.poster_path\n                                    ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                                    : require('../../assets/noPosterSmall.png')\n                            }\n                        />\n                        <Data>\n                            <Title>{result.title ? result.title : result.name}</Title>\n                            <ItemContainer>\n                                {result.release_date && (\n                                    <>\n                                        <Item>{result.release_date.substring(0, 4)}</Item>\n                                        <Divider>•</Divider>\n                                    </>\n                                )}\n                                {result.first_air_date && (\n                                    <>\n                                        <Item>{result.first_air_date.substring(0, 4)}</Item>\n                                        <Divider>•</Divider>\n                                    </>\n                                )}\n                                {result?.runtime > 0 ? (\n                                    <>\n                                        <Item>{`${result.runtime} min`}</Item>\n                                        <Divider>•</Divider>\n                                    </>\n                                ) : null}\n                                {result?.episode_run_time > 0 ? (\n                                    <>\n                                        <Item>{`${result.episode_run_time[0]} min`}</Item>\n                                        <Divider>•</Divider>\n                                    </>\n                                ) : null}\n                                <Item>\n                                    {result.genres && result.genres.length > 0\n                                        ? result.genres.map((genre, index) =>\n                                              index === result.genres.length - 1 ? genre.name : `${genre.name} / `\n                                          )\n                                        : 'No Genres'}\n                                </Item>\n                                {result.imdb_id && (\n                                    <>\n                                        <Divider>•</Divider>\n                                        <Item>\n                                            <IMDb href={`https://www.imdb.com/title/${result.imdb_id}/`} target=\"_blank\" />\n                                            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n                                        </Item>\n                                    </>\n                                )}\n                                {result.vote_average !== 0 && (\n                                    <>\n                                        <Divider>•</Divider>\n                                        <Stars role=\"img\" aria-label=\"rating\">\n                                            {['☆', '☆', '☆', '☆', '☆'].fill('★', 0, Math.round(result.vote_average / 2)).join(' ')}\n                                        </Stars>\n                                    </>\n                                )}\n                            </ItemContainer>\n                            <Overview>{result.overview}</Overview>\n                            <Tabs result={result} />\n                        </Data>\n                        {result.belongs_to_collection && (\n                            <Collection to={`/collection/${result.belongs_to_collection.id}`}>\n                                <Poster\n                                    key={result.belongs_to_collection.id}\n                                    id={result.belongs_to_collection.id}\n                                    imageUrl={result.belongs_to_collection.poster_path}\n                                    title={result.belongs_to_collection.name}\n                                    isCollection={true}\n                                />\n                            </Collection>\n                        )}\n                    </Content>\n                </Container>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error} />}\n        </>\n    );\nDetailPresenter.propTypes = {\n    Result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n};\n\nexport default DetailPresenter;\n","import DetailContainer from './DetailContainer';\n\nexport default DetailContainer;\n","import React from 'react';\nimport DetailPresenter from './DetailPresenter.js';\nimport { moviesApi, tvApi } from 'api.js';\n\nexport default class extends React.Component {\n    constructor(props) {\n        super(props);\n        const {\n            location: { pathname },\n        } = props;\n        this.state = {\n            result: null,\n            error: null,\n            loading: true,\n            isMovie: pathname.includes('/movie/'),\n        };\n    }\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: { id },\n            },\n            history: { push },\n        } = this.props;\n        const { isMovie } = this.state;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push('/');\n        }\n        let result;\n        try {\n            if (isMovie) {\n                ({ data: result } = await moviesApi.movieDetail(parsedId));\n            } else {\n                ({ data: result } = await tvApi.showDetail(parsedId));\n            }\n        } catch {\n            this.setState({ error: \"찾을수가 없습니다.\" });\n        } finally {\n            this.setState({ loading: false, result });\n        }\n    }\n\n    render() {\n        const { result, error, loading } = this.state;\n        return <DetailPresenter result={result} error={error} loading={loading} />;\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport Helmet from 'react-helmet';\nimport Section from 'Components/Section';\nimport Loader from 'Components/Loader';\nimport Message from '../../Components/Message';\nimport Poster from '../../Components/Poster';\n\nconst Container = styled.div`\n    height: calc(100vh - 50px);\n    width: 100%;\n    position: relative;\n    padding: 50px;\n`;\n\nconst BackDrop = styled.div`\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-image: url(${(props) => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    filter: blur(3px);\n    opacity: 0.5;\n    z-index: 0;\n`;\n\nconst Content = styled.div`\n    display: flex;\n    width: 100%;\n    height: 100%;\n    position: relative;\n    z-index: 1;\n`;\n\nconst Cover = styled.div`\n    width: 30%;\n    height: 100%;\n    background-image: url(${(props) => props.bgImage});\n    background-position: center center;\n    background-size: cover;\n    border-radius: 5px;\n`;\n\nconst Data = styled.div`\n    width: 70%;\n    margin-left: 10px;\n`;\n\nconst Title = styled.h3`\n    font-size: 32px;\n`;\n\nconst Overview = styled.div`\n    font-size: 12px;\n    opacity: 0.7;\n    line-height: 1.5;\n    width: 50%;\n    margin: 20px 0;\n`;\n\nconst CollectionPresenter = ({ result, loading, error }) =>\n    loading ? (\n        <>\n            <Helmet>\n                <title>Loading | 영드사</title>\n            </Helmet>\n            <Loader />\n        </>\n    ) : (\n        <>\n            {result && (\n                <Container>\n                    <Helmet>\n                        <title>{result.name} | 영드사</title>\n                    </Helmet>\n                    <BackDrop bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`} />\n                    <Content>\n                        <Cover\n                            bgImage={\n                                result.poster_path\n                                    ? `https://image.tmdb.org/t/p/original${result.poster_path}`\n                                    : require('../../assets/noPosterSmall.png')\n                            }\n                        />\n                        <Data>\n                            <Title>{result.name}</Title>\n                            <Overview>{result.overview}</Overview>\n                            {result.parts && result.parts.length > 0 && (\n                                <Section title=\"Movies belonged to this collection\">\n                                    {result.parts.map((movie) => (\n                                        <Poster\n                                            key={movie.id}\n                                            id={movie.id}\n                                            imageUrl={movie.poster_path}\n                                            title={movie.title}\n                                            rating={movie.vote_average}\n                                            year={movie.release_date}\n                                            isMovie={true}\n                                        />\n                                    ))}\n                                </Section>\n                            )}\n                        </Data>\n                    </Content>\n                </Container>\n            )}\n            {error && <Message color=\"#e74c3c\" text={error} />}\n        </>\n    );\nCollectionPresenter.propTypes = {\n    Result: PropTypes.object,\n    loading: PropTypes.bool.isRequired,\n    error: PropTypes.string,\n};\n\nexport default CollectionPresenter;\n","import CollectionContainer from './CollectionContainer';\n\nexport default CollectionContainer;\n","import React from 'react';\nimport CollectionPresenter from './CollectionPresenter';\nimport { collectionApi } from 'api.js';\n\nexport default class extends React.Component {\n    state = {\n        result: null,\n        error: null,\n        loading: true,\n    };\n\n    async componentDidMount() {\n        const {\n            match: {\n                params: { id },\n            },\n            history: { push },\n        } = this.props;\n        const parsedId = parseInt(id);\n        if (isNaN(parsedId)) {\n            return push('/');\n        }\n        let result;\n        try {\n            ({ data: result } = await collectionApi.showDetail(parsedId));\n        } catch {\n            this.setState({ error: \"Can't find anything.\" });\n        } finally {\n            this.setState({ loading: false, result });\n        }\n    }\n\n    render() {\n        const { result, error, loading } = this.state;\n        return <CollectionPresenter result={result} error={error} loading={loading} />;\n    }\n}\n\n","import React from 'react';\nimport { HashRouter as Router, Route, Redirect, Switch } from 'react-router-dom';\nimport Header from 'Components/Header';\nimport Home from 'Routes/Home';\nimport TV from 'Routes/TV';\nimport Search from 'Routes/Search';\nimport Detail from 'Routes/Detail';\nimport Collection from 'Routes/Collection';\n\nexport default () => (\n    <Router>\n        <>\n            <Header />\n            <Switch>\n                <Route path=\"/\" exact component={Home} />\n                <Route path=\"/tv\" component={TV} />\n                <Route path=\"/search\" component={Search} />\n                <Route path=\"/movie/:id\" component={Detail} />\n                <Route path=\"/show/:id\" component={Detail} />\n                <Route path=\"/collection/:id\" component={Collection} />\n                <Redirect from=\"*\" to=\"/\" />\n            </Switch>\n        </>\n    </Router>\n);\n","import { createGlobalStyle } from 'styled-components';\nimport reset from 'styled-reset';\n\nconst globalStyles = createGlobalStyle`\n    ${reset};\n    a{\n        text-decoration:none;\n        color:inherit;\n    }\n    *{\n        box-sizing: border-box;\n    }\n    body {\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n        font-size: 12px;\n        background-color:rgba(20, 20, 20, 1);\n        color: white;\n        padding-top: 50px;\n    }\n`;\n\nexport default globalStyles;\n","import React, { Component } from 'react';\nimport Router from 'Components/Router';\nimport GlobalStyles from './GlobalStyles';\n\nclass App extends Component {\n    render() {\n        return (\n            <>\n                <Router />\n                <GlobalStyles />\n            </>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}